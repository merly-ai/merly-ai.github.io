{
  "files": [
    "abspath.c",
    "add-interactive.c",
    "add-interactive.h",
    "add-patch.c",
    "advice.c",
    "advice.h",
    "alias.c",
    "alias.h",
    "alloc.c",
    "alloc.h",
    "apply.c",
    "apply.h",
    "archive-tar.c",
    "archive-zip.c",
    "archive.c",
    "archive.h",
    "attr.c",
    "attr.h",
    "banned.h",
    "base85.c",
    "bisect.c",
    "bisect.h",
    "blame.c",
    "blame.h",
    "blob.c",
    "blob.h",
    "block-sha1\\sha1.c",
    "block-sha1\\sha1.h",
    "bloom.c",
    "bloom.h",
    "branch.c",
    "branch.h",
    "builtin\\add.c",
    "builtin\\am.c",
    "builtin\\annotate.c",
    "builtin\\apply.c",
    "builtin\\archive.c",
    "builtin\\bisect--helper.c",
    "builtin\\blame.c",
    "builtin\\branch.c",
    "builtin\\bugreport.c",
    "builtin\\bundle.c",
    "builtin\\cat-file.c",
    "builtin\\check-attr.c",
    "builtin\\check-ignore.c",
    "builtin\\check-mailmap.c",
    "builtin\\check-ref-format.c",
    "builtin\\checkout--worker.c",
    "builtin\\checkout-index.c",
    "builtin\\checkout.c",
    "builtin\\clean.c",
    "builtin\\clone.c",
    "builtin\\column.c",
    "builtin\\commit-graph.c",
    "builtin\\commit-tree.c",
    "builtin\\commit.c",
    "builtin\\config.c",
    "builtin\\count-objects.c",
    "builtin\\credential-cache--daemon.c",
    "builtin\\credential-cache.c",
    "builtin\\credential-store.c",
    "builtin\\credential.c",
    "builtin\\describe.c",
    "builtin\\diff-files.c",
    "builtin\\diff-index.c",
    "builtin\\diff-tree.c",
    "builtin\\diff.c",
    "builtin\\difftool.c",
    "builtin\\env--helper.c",
    "builtin\\fast-export.c",
    "builtin\\fast-import.c",
    "builtin\\fetch-pack.c",
    "builtin\\fetch.c",
    "builtin\\fmt-merge-msg.c",
    "builtin\\for-each-ref.c",
    "builtin\\for-each-repo.c",
    "builtin\\fsck.c",
    "builtin\\fsmonitor--daemon.c",
    "builtin\\gc.c",
    "builtin\\get-tar-commit-id.c",
    "builtin\\grep.c",
    "builtin\\hash-object.c",
    "builtin\\help.c",
    "builtin\\hook.c",
    "builtin\\index-pack.c",
    "builtin\\init-db.c",
    "builtin\\interpret-trailers.c",
    "builtin\\log.c",
    "builtin\\ls-files.c",
    "builtin\\ls-remote.c",
    "builtin\\ls-tree.c",
    "builtin\\mailinfo.c",
    "builtin\\mailsplit.c",
    "builtin\\merge-base.c",
    "builtin\\merge-file.c",
    "builtin\\merge-index.c",
    "builtin\\merge-ours.c",
    "builtin\\merge-recursive.c",
    "builtin\\merge-tree.c",
    "builtin\\merge.c",
    "builtin\\mktag.c",
    "builtin\\mktree.c",
    "builtin\\multi-pack-index.c",
    "builtin\\mv.c",
    "builtin\\name-rev.c",
    "builtin\\notes.c",
    "builtin\\pack-objects.c",
    "builtin\\pack-redundant.c",
    "builtin\\pack-refs.c",
    "builtin\\patch-id.c",
    "builtin\\prune-packed.c",
    "builtin\\prune.c",
    "builtin\\pull.c",
    "builtin\\push.c",
    "builtin\\range-diff.c",
    "builtin\\read-tree.c",
    "builtin\\rebase.c",
    "builtin\\receive-pack.c",
    "builtin\\reflog.c",
    "builtin\\remote-ext.c",
    "builtin\\remote-fd.c",
    "builtin\\remote.c",
    "builtin\\repack.c",
    "builtin\\replace.c",
    "builtin\\rerere.c",
    "builtin\\reset.c",
    "builtin\\rev-list.c",
    "builtin\\rev-parse.c",
    "builtin\\revert.c",
    "builtin\\rm.c",
    "builtin\\send-pack.c",
    "builtin\\shortlog.c",
    "builtin\\show-branch.c",
    "builtin\\show-index.c",
    "builtin\\show-ref.c",
    "builtin\\sparse-checkout.c",
    "builtin\\stash.c",
    "builtin\\stripspace.c",
    "builtin\\submodule--helper.c",
    "builtin\\symbolic-ref.c",
    "builtin\\tag.c",
    "builtin\\unpack-file.c",
    "builtin\\unpack-objects.c",
    "builtin\\update-index.c",
    "builtin\\update-ref.c",
    "builtin\\update-server-info.c",
    "builtin\\upload-archive.c",
    "builtin\\upload-pack.c",
    "builtin\\var.c",
    "builtin\\verify-commit.c",
    "builtin\\verify-pack.c",
    "builtin\\verify-tag.c",
    "builtin\\worktree.c",
    "builtin\\write-tree.c",
    "builtin.h",
    "bulk-checkin.c",
    "bulk-checkin.h",
    "bundle.c",
    "bundle.h",
    "cache-tree.c",
    "cache-tree.h",
    "cache.h",
    "cbtree.c",
    "cbtree.h",
    "chdir-notify.c",
    "chdir-notify.h",
    "checkout.c",
    "checkout.h",
    "chunk-format.c",
    "chunk-format.h",
    "color.c",
    "color.h",
    "column.c",
    "column.h",
    "combine-diff.c",
    "commit-graph.c",
    "commit-graph.h",
    "commit-reach.c",
    "commit-reach.h",
    "commit-slab-decl.h",
    "commit-slab-impl.h",
    "commit-slab.h",
    "commit.c",
    "commit.h",
    "common-main.c",
    "compat\\access.c",
    "compat\\apple-common-crypto.h",
    "compat\\basename.c",
    "compat\\bswap.h",
    "compat\\compiler.h",
    "compat\\fileno.c",
    "compat\\fopen.c",
    "compat\\fsmonitor\\fsm-darwin-gcc.h",
    "compat\\fsmonitor\\fsm-health-darwin.c",
    "compat\\fsmonitor\\fsm-health-win32.c",
    "compat\\fsmonitor\\fsm-health.h",
    "compat\\fsmonitor\\fsm-listen-darwin.c",
    "compat\\fsmonitor\\fsm-listen-win32.c",
    "compat\\fsmonitor\\fsm-listen.h",
    "compat\\fsmonitor\\fsm-settings-darwin.c",
    "compat\\fsmonitor\\fsm-settings-win32.c",
    "compat\\hstrerror.c",
    "compat\\inet_ntop.c",
    "compat\\inet_pton.c",
    "compat\\linux\\procinfo.c",
    "compat\\memmem.c",
    "compat\\mingw.c",
    "compat\\mingw.h",
    "compat\\mkdir.c",
    "compat\\mkdtemp.c",
    "compat\\mmap.c",
    "compat\\msvc.c",
    "compat\\msvc.h",
    "compat\\nedmalloc\\malloc.c.h",
    "compat\\nedmalloc\\nedmalloc.c",
    "compat\\nedmalloc\\nedmalloc.h",
    "compat\\obstack.c",
    "compat\\obstack.h",
    "compat\\open.c",
    "compat\\poll\\poll.c",
    "compat\\poll\\poll.h",
    "compat\\pread.c",
    "compat\\precompose_utf8.c",
    "compat\\precompose_utf8.h",
    "compat\\qsort_s.c",
    "compat\\regex\\regcomp.c",
    "compat\\regex\\regex.c",
    "compat\\regex\\regex.h",
    "compat\\regex\\regex_internal.c",
    "compat\\regex\\regex_internal.h",
    "compat\\regex\\regexec.c",
    "compat\\setenv.c",
    "compat\\sha1-chunked.c",
    "compat\\sha1-chunked.h",
    "compat\\simple-ipc\\ipc-shared.c",
    "compat\\simple-ipc\\ipc-unix-socket.c",
    "compat\\simple-ipc\\ipc-win32.c",
    "compat\\snprintf.c",
    "compat\\stat.c",
    "compat\\strcasestr.c",
    "compat\\strdup.c",
    "compat\\strlcpy.c",
    "compat\\strtoimax.c",
    "compat\\strtoumax.c",
    "compat\\stub\\procinfo.c",
    "compat\\terminal.c",
    "compat\\terminal.h",
    "compat\\unsetenv.c",
    "compat\\vcbuild\\include\\sys\\param.h",
    "compat\\vcbuild\\include\\sys\\time.h",
    "compat\\vcbuild\\include\\sys\\utime.h",
    "compat\\vcbuild\\include\\unistd.h",
    "compat\\vcbuild\\include\\utime.h",
    "compat\\win32\\alloca.h",
    "compat\\win32\\dirent.c",
    "compat\\win32\\dirent.h",
    "compat\\win32\\flush.c",
    "compat\\win32\\lazyload.h",
    "compat\\win32\\path-utils.c",
    "compat\\win32\\path-utils.h",
    "compat\\win32\\pthread.c",
    "compat\\win32\\pthread.h",
    "compat\\win32\\syslog.c",
    "compat\\win32\\syslog.h",
    "compat\\win32\\trace2_win32_process_info.c",
    "compat\\win32.h",
    "compat\\win32mmap.c",
    "compat\\winansi.c",
    "compat\\zlib-uncompress2.c",
    "config.c",
    "config.h",
    "connect.c",
    "connect.h",
    "connected.c",
    "connected.h",
    "contrib\\credential\\gnome-keyring\\git-credential-gnome-keyring.c",
    "contrib\\credential\\libsecret\\git-credential-libsecret.c",
    "contrib\\credential\\osxkeychain\\git-credential-osxkeychain.c",
    "contrib\\credential\\wincred\\git-credential-wincred.c",
    "contrib\\scalar\\scalar.c",
    "convert.c",
    "convert.h",
    "copy.c",
    "credential.c",
    "credential.h",
    "csum-file.c",
    "csum-file.h",
    "ctype.c",
    "daemon.c",
    "date.c",
    "date.h",
    "decorate.c",
    "decorate.h",
    "delta-islands.c",
    "delta-islands.h",
    "delta.h",
    "diff-delta.c",
    "diff-lib.c",
    "diff-merges.c",
    "diff-merges.h",
    "diff-no-index.c",
    "diff.c",
    "diff.h",
    "diffcore-break.c",
    "diffcore-delta.c",
    "diffcore-order.c",
    "diffcore-pickaxe.c",
    "diffcore-rename.c",
    "diffcore-rotate.c",
    "diffcore.h",
    "dir-iterator.c",
    "dir-iterator.h",
    "dir.c",
    "dir.h",
    "editor.c",
    "entry.c",
    "entry.h",
    "environment.c",
    "environment.h",
    "ewah\\bitmap.c",
    "ewah\\ewah_bitmap.c",
    "ewah\\ewah_io.c",
    "ewah\\ewah_rlw.c",
    "ewah\\ewok.h",
    "ewah\\ewok_rlw.h",
    "exec-cmd.c",
    "exec-cmd.h",
    "fetch-negotiator.c",
    "fetch-negotiator.h",
    "fetch-pack.c",
    "fetch-pack.h",
    "fmt-merge-msg.c",
    "fmt-merge-msg.h",
    "fsck.c",
    "fsck.h",
    "fsmonitor--daemon.h",
    "fsmonitor-ipc.c",
    "fsmonitor-ipc.h",
    "fsmonitor-settings.c",
    "fsmonitor-settings.h",
    "fsmonitor.c",
    "fsmonitor.h",
    "fuzz-commit-graph.c",
    "fuzz-pack-headers.c",
    "fuzz-pack-idx.c",
    "gettext.c",
    "gettext.h",
    "git-compat-util.h",
    "git-curl-compat.h",
    "git.c",
    "gpg-interface.c",
    "gpg-interface.h",
    "graph.c",
    "graph.h",
    "grep.c",
    "grep.h",
    "hash-lookup.c",
    "hash-lookup.h",
    "hash.h",
    "hashmap.c",
    "hashmap.h",
    "help.c",
    "help.h",
    "hex.c",
    "hook.c",
    "hook.h",
    "http-backend.c",
    "http-fetch.c",
    "http-push.c",
    "http-walker.c",
    "http.c",
    "http.h",
    "ident.c",
    "imap-send.c",
    "iterator.h",
    "json-writer.c",
    "json-writer.h",
    "khash.h",
    "kwset.c",
    "kwset.h",
    "levenshtein.c",
    "levenshtein.h",
    "line-log.c",
    "line-log.h",
    "line-range.c",
    "line-range.h",
    "linear-assignment.c",
    "linear-assignment.h",
    "list-objects-filter-options.c",
    "list-objects-filter-options.h",
    "list-objects-filter.c",
    "list-objects-filter.h",
    "list-objects.c",
    "list-objects.h",
    "list.h",
    "ll-merge.c",
    "ll-merge.h",
    "lockfile.c",
    "lockfile.h",
    "log-tree.c",
    "log-tree.h",
    "ls-refs.c",
    "ls-refs.h",
    "mailinfo.c",
    "mailinfo.h",
    "mailmap.c",
    "mailmap.h",
    "match-trees.c",
    "mem-pool.c",
    "mem-pool.h",
    "merge-blobs.c",
    "merge-blobs.h",
    "merge-ort-wrappers.c",
    "merge-ort-wrappers.h",
    "merge-ort.c",
    "merge-ort.h",
    "merge-recursive.c",
    "merge-recursive.h",
    "merge.c",
    "mergesort.c",
    "mergesort.h",
    "midx.c",
    "midx.h",
    "name-hash.c",
    "negotiator\\default.c",
    "negotiator\\default.h",
    "negotiator\\noop.c",
    "negotiator\\noop.h",
    "negotiator\\skipping.c",
    "negotiator\\skipping.h",
    "notes-cache.c",
    "notes-cache.h",
    "notes-merge.c",
    "notes-merge.h",
    "notes-utils.c",
    "notes-utils.h",
    "notes.c",
    "notes.h",
    "object-file.c",
    "object-name.c",
    "object-store.h",
    "object.c",
    "object.h",
    "oid-array.c",
    "oid-array.h",
    "oidmap.c",
    "oidmap.h",
    "oidset.c",
    "oidset.h",
    "oidtree.c",
    "oidtree.h",
    "pack-bitmap-write.c",
    "pack-bitmap.c",
    "pack-bitmap.h",
    "pack-check.c",
    "pack-mtimes.c",
    "pack-mtimes.h",
    "pack-objects.c",
    "pack-objects.h",
    "pack-revindex.c",
    "pack-revindex.h",
    "pack-write.c",
    "pack.h",
    "packfile.c",
    "packfile.h",
    "pager.c",
    "parallel-checkout.c",
    "parallel-checkout.h",
    "parse-options-cb.c",
    "parse-options.c",
    "parse-options.h",
    "patch-delta.c",
    "patch-ids.c",
    "patch-ids.h",
    "path.c",
    "path.h",
    "pathspec.c",
    "pathspec.h",
    "pkt-line.c",
    "pkt-line.h",
    "ppc\\sha1.c",
    "ppc\\sha1.h",
    "preload-index.c",
    "pretty.c",
    "pretty.h",
    "prio-queue.c",
    "prio-queue.h",
    "progress.c",
    "progress.h",
    "promisor-remote.c",
    "promisor-remote.h",
    "prompt.c",
    "prompt.h",
    "protocol-caps.c",
    "protocol-caps.h",
    "protocol.c",
    "protocol.h",
    "prune-packed.c",
    "prune-packed.h",
    "quote.c",
    "quote.h",
    "range-diff.c",
    "range-diff.h",
    "reachable.c",
    "reachable.h",
    "read-cache.c",
    "rebase-interactive.c",
    "rebase-interactive.h",
    "rebase.c",
    "rebase.h",
    "ref-filter.c",
    "ref-filter.h",
    "reflog-walk.c",
    "reflog-walk.h",
    "reflog.c",
    "reflog.h",
    "refs\\debug.c",
    "refs\\files-backend.c",
    "refs\\iterator.c",
    "refs\\packed-backend.c",
    "refs\\packed-backend.h",
    "refs\\ref-cache.c",
    "refs\\ref-cache.h",
    "refs\\refs-internal.h",
    "refs.c",
    "refs.h",
    "refspec.c",
    "refspec.h",
    "reftable\\basics.c",
    "reftable\\basics.h",
    "reftable\\basics_test.c",
    "reftable\\block.c",
    "reftable\\block.h",
    "reftable\\block_test.c",
    "reftable\\blocksource.c",
    "reftable\\blocksource.h",
    "reftable\\constants.h",
    "reftable\\dump.c",
    "reftable\\error.c",
    "reftable\\generic.c",
    "reftable\\generic.h",
    "reftable\\iter.c",
    "reftable\\iter.h",
    "reftable\\merged.c",
    "reftable\\merged.h",
    "reftable\\merged_test.c",
    "reftable\\pq.c",
    "reftable\\pq.h",
    "reftable\\pq_test.c",
    "reftable\\publicbasics.c",
    "reftable\\reader.c",
    "reftable\\reader.h",
    "reftable\\readwrite_test.c",
    "reftable\\record.c",
    "reftable\\record.h",
    "reftable\\record_test.c",
    "reftable\\refname.c",
    "reftable\\refname.h",
    "reftable\\refname_test.c",
    "reftable\\reftable-blocksource.h",
    "reftable\\reftable-error.h",
    "reftable\\reftable-generic.h",
    "reftable\\reftable-iterator.h",
    "reftable\\reftable-malloc.h",
    "reftable\\reftable-merged.h",
    "reftable\\reftable-reader.h",
    "reftable\\reftable-record.h",
    "reftable\\reftable-stack.h",
    "reftable\\reftable-tests.h",
    "reftable\\reftable-writer.h",
    "reftable\\stack.c",
    "reftable\\stack.h",
    "reftable\\stack_test.c",
    "reftable\\system.h",
    "reftable\\test_framework.c",
    "reftable\\test_framework.h",
    "reftable\\tree.c",
    "reftable\\tree.h",
    "reftable\\tree_test.c",
    "reftable\\writer.c",
    "reftable\\writer.h",
    "remote-curl.c",
    "remote.c",
    "remote.h",
    "replace-object.c",
    "replace-object.h",
    "repo-settings.c",
    "repository.c",
    "repository.h",
    "rerere.c",
    "rerere.h",
    "reset.c",
    "reset.h",
    "resolve-undo.c",
    "resolve-undo.h",
    "revision.c",
    "revision.h",
    "run-command.c",
    "run-command.h",
    "send-pack.c",
    "send-pack.h",
    "sequencer.c",
    "sequencer.h",
    "serve.c",
    "serve.h",
    "server-info.c",
    "setup.c",
    "sh-i18n--envsubst.c",
    "sha1dc\\sha1.c",
    "sha1dc\\sha1.h",
    "sha1dc\\ubc_check.c",
    "sha1dc\\ubc_check.h",
    "sha1dc_git.c",
    "sha1dc_git.h",
    "sha256\\block\\sha256.c",
    "sha256\\block\\sha256.h",
    "sha256\\gcrypt.h",
    "shallow.c",
    "shallow.h",
    "shell.c",
    "shortlog.h",
    "sideband.c",
    "sideband.h",
    "sigchain.c",
    "sigchain.h",
    "simple-ipc.h",
    "sparse-index.c",
    "sparse-index.h",
    "split-index.c",
    "split-index.h",
    "stable-qsort.c",
    "strbuf.c",
    "strbuf.h",
    "streaming.c",
    "streaming.h",
    "string-list.c",
    "string-list.h",
    "strmap.c",
    "strmap.h",
    "strvec.c",
    "strvec.h",
    "sub-process.c",
    "sub-process.h",
    "submodule-config.c",
    "submodule-config.h",
    "submodule.c",
    "submodule.h",
    "symlinks.c",
    "t\\helper\\test-advise.c",
    "t\\helper\\test-bitmap.c",
    "t\\helper\\test-bloom.c",
    "t\\helper\\test-chmtime.c",
    "t\\helper\\test-config.c",
    "t\\helper\\test-crontab.c",
    "t\\helper\\test-csprng.c",
    "t\\helper\\test-ctype.c",
    "t\\helper\\test-date.c",
    "t\\helper\\test-delta.c",
    "t\\helper\\test-dir-iterator.c",
    "t\\helper\\test-drop-caches.c",
    "t\\helper\\test-dump-cache-tree.c",
    "t\\helper\\test-dump-fsmonitor.c",
    "t\\helper\\test-dump-split-index.c",
    "t\\helper\\test-dump-untracked-cache.c",
    "t\\helper\\test-example-decorate.c",
    "t\\helper\\test-fake-ssh.c",
    "t\\helper\\test-fast-rebase.c",
    "t\\helper\\test-fsmonitor-client.c",
    "t\\helper\\test-genrandom.c",
    "t\\helper\\test-genzeros.c",
    "t\\helper\\test-getcwd.c",
    "t\\helper\\test-hash-speed.c",
    "t\\helper\\test-hash.c",
    "t\\helper\\test-hashmap.c",
    "t\\helper\\test-hexdump.c",
    "t\\helper\\test-index-version.c",
    "t\\helper\\test-json-writer.c",
    "t\\helper\\test-lazy-init-name-hash.c",
    "t\\helper\\test-match-trees.c",
    "t\\helper\\test-mergesort.c",
    "t\\helper\\test-mktemp.c",
    "t\\helper\\test-oid-array.c",
    "t\\helper\\test-oidmap.c",
    "t\\helper\\test-oidtree.c",
    "t\\helper\\test-online-cpus.c",
    "t\\helper\\test-pack-mtimes.c",
    "t\\helper\\test-parse-options.c",
    "t\\helper\\test-parse-pathspec-file.c",
    "t\\helper\\test-partial-clone.c",
    "t\\helper\\test-path-utils.c",
    "t\\helper\\test-pcre2-config.c",
    "t\\helper\\test-pkt-line.c",
    "t\\helper\\test-prio-queue.c",
    "t\\helper\\test-proc-receive.c",
    "t\\helper\\test-progress.c",
    "t\\helper\\test-reach.c",
    "t\\helper\\test-read-cache.c",
    "t\\helper\\test-read-graph.c",
    "t\\helper\\test-read-midx.c",
    "t\\helper\\test-ref-store.c",
    "t\\helper\\test-reftable.c",
    "t\\helper\\test-regex.c",
    "t\\helper\\test-repository.c",
    "t\\helper\\test-revision-walking.c",
    "t\\helper\\test-run-command.c",
    "t\\helper\\test-scrap-cache-tree.c",
    "t\\helper\\test-serve-v2.c",
    "t\\helper\\test-sha1.c",
    "t\\helper\\test-sha256.c",
    "t\\helper\\test-sigchain.c",
    "t\\helper\\test-simple-ipc.c",
    "t\\helper\\test-strcmp-offset.c",
    "t\\helper\\test-string-list.c",
    "t\\helper\\test-submodule-config.c",
    "t\\helper\\test-submodule-nested-repo-config.c",
    "t\\helper\\test-subprocess.c",
    "t\\helper\\test-tool.c",
    "t\\helper\\test-tool.h",
    "t\\helper\\test-trace2.c",
    "t\\helper\\test-urlmatch-normalization.c",
    "t\\helper\\test-userdiff.c",
    "t\\helper\\test-wildmatch.c",
    "t\\helper\\test-windows-named-pipe.c",
    "t\\helper\\test-write-cache.c",
    "t\\helper\\test-xml-encode.c",
    "t\\t0200\\test.c",
    "t\\t4051\\appended1.c",
    "t\\t4051\\appended2.c",
    "t\\t4051\\dummy.c",
    "t\\t4051\\hello.c",
    "t\\t4051\\includes.c",
    "t\\t4256\\1\\mailinfo.c",
    "tag.c",
    "tag.h",
    "tar.h",
    "tempfile.c",
    "tempfile.h",
    "thread-utils.c",
    "thread-utils.h",
    "tmp-objdir.c",
    "tmp-objdir.h",
    "trace.c",
    "trace.h",
    "trace2\\tr2_cfg.c",
    "trace2\\tr2_cfg.h",
    "trace2\\tr2_cmd_name.c",
    "trace2\\tr2_cmd_name.h",
    "trace2\\tr2_dst.c",
    "trace2\\tr2_dst.h",
    "trace2\\tr2_sid.c",
    "trace2\\tr2_sid.h",
    "trace2\\tr2_sysenv.c",
    "trace2\\tr2_sysenv.h",
    "trace2\\tr2_tbuf.c",
    "trace2\\tr2_tbuf.h",
    "trace2\\tr2_tgt.h",
    "trace2\\tr2_tgt_event.c",
    "trace2\\tr2_tgt_normal.c",
    "trace2\\tr2_tgt_perf.c",
    "trace2\\tr2_tls.c",
    "trace2\\tr2_tls.h",
    "trace2.c",
    "trace2.h",
    "trailer.c",
    "trailer.h",
    "transport-helper.c",
    "transport-internal.h",
    "transport.c",
    "transport.h",
    "tree-diff.c",
    "tree-walk.c",
    "tree-walk.h",
    "tree.c",
    "tree.h",
    "unicode-width.h",
    "unix-socket.c",
    "unix-socket.h",
    "unix-stream-server.c",
    "unix-stream-server.h",
    "unpack-trees.c",
    "unpack-trees.h",
    "upload-pack.c",
    "upload-pack.h",
    "url.c",
    "url.h",
    "urlmatch.c",
    "urlmatch.h",
    "usage.c",
    "userdiff.c",
    "userdiff.h",
    "utf8.c",
    "utf8.h",
    "varint.c",
    "varint.h",
    "version.c",
    "version.h",
    "versioncmp.c",
    "walker.c",
    "walker.h",
    "wildmatch.c",
    "wildmatch.h",
    "worktree.c",
    "worktree.h",
    "wrapper.c",
    "write-or-die.c",
    "ws.c",
    "wt-status.c",
    "wt-status.h",
    "xdiff\\xdiff.h",
    "xdiff\\xdiffi.c",
    "xdiff\\xdiffi.h",
    "xdiff\\xemit.c",
    "xdiff\\xemit.h",
    "xdiff\\xhistogram.c",
    "xdiff\\xinclude.h",
    "xdiff\\xmacros.h",
    "xdiff\\xmerge.c",
    "xdiff\\xpatience.c",
    "xdiff\\xprepare.c",
    "xdiff\\xprepare.h",
    "xdiff\\xtypes.h",
    "xdiff\\xutils.c",
    "xdiff\\xutils.h",
    "xdiff-interface.c",
    "xdiff-interface.h",
    "zlib.c"
  ],
  "instances": {
    "101:87": {
      "normalized": "(#<#a == b || !b || *b != 3#>#)"
    },
    "101:91": {
      "normalized": "(#<#!a || b(a + 1, &c, &d) || *d != 3#>#)"
    },
    "103:410": {
      "normalized": "(#<#!(a & (signed){0}) && b(c, d) < 0#>#)"
    },
    "104:605": {
      "normalized": "(#<#a + b + !!c#># > 1)"
    },
    "106:1654": {
      "normalized": "(((a < 0) && (!b || !b->c)) || (#<#(0 <= a) && (!b && d[a])#>#))"
    },
    "106:2384": {
      "normalized": "(#<#(a >> 3) + (b >> 4) > (c >> 5)#>#)"
    },
    "106:2492": {
      "normalized": "(#<#a && b(c) && b(c) == b(d) && !d->e && c->f != (signed){0} && c->f != (signed){1}#>#)"
    },
    "106:2675": {
      "normalized": "(#<#a && b > a && c > 1#>#)"
    },
    "106:2896": {
      "normalized": "(#<#a < 3 * b && c + 1 < d#>#)"
    },
    "106:357": {
      "normalized": "(#<#(a.b || c == 0) && (d == (signed){0} || d == (signed){1})#>#)"
    },
    "106:4108": {
      "normalized": "(#<#*a || b.c & 3#>#)"
    },
    "106:4297": {
      "normalized": "(#<#a != !b || c#>#)"
    },
    "106:4413": {
      "normalized": "(#<#!a || (!b && c) || d(e)#>#)"
    },
    "106:520": {
      "normalized": "(#<#a && b + c + d + c >= a#>#)"
    },
    "106:578": {
      "normalized": "(#<#!a && b->c > 1 && d(b, &e, f, g, h(b, i))#>#)"
    },
    "106:590": {
      "normalized": "(#<#!a && b->c == 1 && d(b, &e, f, g, h)#>#)"
    },
    "106:613": {
      "normalized": "(#<#a && b + c + d + c >= a#>#)"
    },
    "106:662": {
      "normalized": "(#<#a(b)->c.d == e - 1#>#)"
    },
    "10:1080": {
      "normalized": "(#<#!a || a[1] != 3 || b < a - c#>#)"
    },
    "10:1196": {
      "normalized": "(#<#a + b - c != d.e || f(d.g, c, d.e)#>#)"
    },
    "10:1229": {
      "normalized": "(#<#a < b - c && !d(e, c, a) && f(c[a])#>#)"
    },
    "10:1835": {
      "normalized": "(#<#!a->b && !c && d && e->f > g#>#)"
    },
    "10:1870": {
      "normalized": "(#<#(a != (signed){0}) || b.c != d#>#)"
    },
    "10:1943": {
      "normalized": "(#<#(a < 3) || (a - 4) % 5#>#)"
    },
    "10:1957": {
      "normalized": "(#<#a < b || b <= a - 3#>#)"
    },
    "10:2923": {
      "normalized": "(#<#a != 3 || !b->c || b->d != e#>#)"
    },
    "10:3942": {
      "normalized": "(#<#(a = b(c, d)) && (e(a) || f(a))#>#)"
    },
    "10:3948": {
      "normalized": "(a && (#<#(0 < b->c) || b->d || b->e#>#))"
    },
    "10:4213": {
      "normalized": "(#<#!a || !b || a - c != b - d || e(c, d, b - d)#>#)"
    },
    "10:530": {
      "normalized": "(#<#a - b >= c(\"0\") && d(a[-1]) && d(a[3])#>#)"
    },
    "112:455": {
      "normalized": "(#<#a && b && (!c || d(a, c))#>#)"
    },
    "113:285": {
      "normalized": "(#<#(*a & (signed){0}) && b->c == 0#>#)"
    },
    "116:1367": {
      "normalized": "(#<#(a.b & (signed){0}) || (c != (signed){1}) || (d.e > 0) || a.f#>#)"
    },
    "116:1387": {
      "normalized": "(#<#*a && b(a, \"0\") && b(a, \"1\") && b(a, \"2\") && b(a, \"3\")#>#)"
    },
    "117:651": {
      "normalized": "(#<#*a <= 3 || 4 < *a#>#)"
    },
    "121:1677": {
      "normalized": "(#<#a < 3 || a > 4 || ((b || c) && a != 3)#>#)"
    },
    "121:188": {
      "normalized": "(#<#a && !(a & (signed){0}) && b.c#>#)"
    },
    "122:1015": {
      "normalized": "(#<#((c*)a->b) & ((c*)1 << d)#>#)"
    },
    "122:905": {
      "normalized": "(#<#a.b && c && !(d & (signed){0})#>#)"
    },
    "125:492": {
      "normalized": "(#<#a != (signed){0} && (a != (signed){1} || b())#>#)"
    },
    "126:425": {
      "normalized": "(#<#a->b >= 0 && (a->c || a->d || a->e)#>#)"
    },
    "126:660": {
      "normalized": "(#<#a.b && (a.c || a.d || a.e) && (a.f || a.g)#>#)"
    },
    "128:71": {
      "normalized": "(#<#*a || b->c <= 0#>#)"
    },
    "130:256": {
      "normalized": "((#<#a.b > 0 && (c || d.e)#>#) || (c && d.e))"
    },
    "132:505": {
      "normalized": "(#<#!(a & (signed){0}) && ((a & b) == b)#>#)"
    },
    "132:704": {
      "normalized": "(#<#a && (#<#(0 < b) || c || d#>#)#>#)"
    },
    "132:720": {
      "normalized": "(#<#a <= b && c + d == 0#>#)"
    },
    "13:338": {
      "normalized": "(#<#a(b) && c->d != 0 && e > 0#>#)"
    },
    "140:503": {
      "normalized": "(#<#a.b || a.c || a.d || a.e || a.f.g || a.h != -1#>#)"
    },
    "142:229": {
      "normalized": "(#<#a != b->a || a <= 0#>#)"
    },
    "143:535": {
      "normalized": "(#<#a == b.b || *a != 3 || c || (e*)d != d#>#)"
    },
    "143:541": {
      "normalized": "(#<#!a || a - b < c + 1#>#)"
    },
    "143:871": {
      "normalized": "(#<#a || b == c || *b != 3 || (e*)d != d#>#)"
    },
    "14:661": {
      "normalized": "(#<#a && (b <= 3 || c)#>#)"
    },
    "152:228": {
      "normalized": "(#<#(!a && b) || (a && b > 1)#>#)"
    },
    "159:194": {
      "normalized": "(#<#a < b(c) && d[a] == 3 && e(f, d, a) == 0#>#)"
    },
    "16:189": {
      "normalized": "(!(#<#a == 3 || a == 4 || a == 5 || (6 <= a && a <= 7) || (8 <= a && a <= 9) || (10 <= a && a <= 11)#>#))"
    },
    "170:386": {
      "normalized": "(#<#*a || (b == 1 && c() && d)#>#)"
    },
    "174:652": {
      "normalized": "(#<#a && b <= a--#>#)"
    },
    "175:2033": {
      "normalized": "(a && (#<#a->b <= c * b || (d && b > d)#>#))"
    },
    "182:1170": {
      "normalized": "(#<#a && b - c != d(c)#>#)"
    },
    "182:1675": {
      "normalized": "(#<#a - b > c && !d(b, e, c) && b[c] == 3#>#)"
    },
    "182:434": {
      "normalized": "(#<#a <= b + c + 1 || d(b, \"0\", 3) || b[c] != 4#>#)"
    },
    "182:452": {
      "normalized": "(#<#a + b < c && !d(a, \"0\", 3)#>#)"
    },
    "182:455": {
      "normalized": "(#<#a <= b + c + 1 || d(b + 3, &e) || b[c] != 4#>#)"
    },
    "182:951": {
      "normalized": "(#<#!a || (a->b.c & (signed){0}) || d(a)#>#)"
    },
    "19:61": {
      "normalized": "(#<#3 < a || #<#4 - b < (a *= 5)#>##>#)"
    },
    "1:242": {
      "normalized": "(#<#(a->b) && ((c + 1) % (a->b))#>#)"
    },
    "206:1227": {
      "normalized": "(#<#!a && *b != 3 && *b != 4 && *b != 5 && *b != 6 && *b != 7 && *b != 8 && *b != 9#>#)"
    },
    "206:1302": {
      "normalized": "(#<#(!a || b) && c(d, (signed){0}) == 0#>#)"
    },
    "206:1609": {
      "normalized": "(#<#a.b.c != (signed){0} && a.b.c != a.b.d && a.b.c != a.b.e#>#)"
    },
    "206:2752": {
      "normalized": "(#<#a && (#<#b != c || c > 3#>#)#>#)"
    },
    "206:2833": {
      "normalized": "(#<#a && a != 3 && a != 4 && !b(a)#>#)"
    },
    "225:1205": {
      "normalized": "((#<#!a->b && a->c > 0 && d->e#>#) || d->f)"
    },
    "225:2541": {
      "normalized": "(a(#<#(b != -1 && c > b) || d->e != (signed){0}#>#, 0))"
    },
    "225:340": {
      "normalized": "(#<#(a->b & (signed){0}) && c->d > 1#>#)"
    },
    "225:3485": {
      "normalized": "(a <= b && #<#c[#<#(d & 3) + 1 + a#>#]#># == #<#c[#<#(e & 3) + 1 + a#>#]#>#)"
    },
    "225:387": {
      "normalized": "(#<#a((signed){0}, (signed){1}) != 0 && (b->c || b->d)#>#)"
    },
    "225:402": {
      "normalized": "(#<#a->b > 1 && (c->d || c->e || c->f || c->g)#>#)"
    },
    "225:430": {
      "normalized": "(#<#(a->b & (signed){0}) && c->d > 1#>#)"
    },
    "225:822": {
      "normalized": "(#<#a->b && !(c & (signed){0}) && d->e == NULL#>#)"
    },
    "228:1099": {
      "normalized": "(#<#a-- < 0 || b-- < 0#>#)"
    },
    "228:1158": {
      "normalized": "(#<#a != NULL && a->b > 0 && c != NULL && c->b > 0#>#)"
    },
    "228:296": {
      "normalized": "(#<#!a->b && a->c == NULL && !a->d#>#)"
    },
    "228:754": {
      "normalized": "(#<#a + b - c <= d && d < (e*)3#>#)"
    },
    "230:2213": {
      "normalized": "(#<#a++, b++->c#>#)"
    },
    "230:2785": {
      "normalized": "(#<#a[b++] != a[c - 1]#>#)"
    },
    "230:3817": {
      "normalized": "((#<#(a <= 1 && b <= 1) || b == 0#>#) && (c != (signed){0} && c < (signed){1}))"
    },
    "230:3930": {
      "normalized": "(a <= b && (#<#c[d + 1 + a] == c[e + 1 + a]#>#))"
    },
    "230:423": {
      "normalized": "(#<#a > 0 && b->c != NULL && !b->d#>#)"
    },
    "230:646": {
      "normalized": "(a(#<#b->c == 0 || d->e == NULL || d->f == NULL || d->g == NULL || d->h == NULL#>#, 0))"
    },
    "230:664": {
      "normalized": "(#<#a != 0 && a + b != 0#>#)"
    },
    "258:22": {
      "normalized": "(#<#a < 3 && (4 & (c*)b[a])#>#)"
    },
    "269:1061": {
      "normalized": "(#<#a(b) < 0 || b->c < 1#>#)"
    },
    "269:1164": {
      "normalized": "(#<#a(b, c) || b * c > d#>#)"
    },
    "269:1193": {
      "normalized": "(#<#a(b, c) || b * c > d#>#)"
    },
    "271:1003": {
      "normalized": "(#<#a != b + 1 && *a == 3 && 0 <= c && c < 4#>#)"
    },
    "271:714": {
      "normalized": "(#<#a != b + 1 && *a == 3 && 0 <= c && c < 4#>#)"
    },
    "280:1866": {
      "normalized": "(#<#*a || (b->c == (signed){0})#>#)"
    },
    "280:863": {
      "normalized": "(#<#(a->b & (signed){0}) && c && c->d == (signed){1}#>#)"
    },
    "280:997": {
      "normalized": "(#<#(a & (signed){0}) && !b->c && b->d#>#)"
    },
    "280:999": {
      "normalized": "(#<#(a & (signed){0}) && !b->c && b->d#>#)"
    },
    "289:1289": {
      "normalized": "(#<#a[0] != 3 || b - a <= 4#>#)"
    },
    "289:26": {
      "normalized": "(#<#a < 3 || (b + 3) % 4#>#)"
    },
    "289:531": {
      "normalized": "(#<#(a != -1) && (b + 3 < a)#>#)"
    },
    "289:545": {
      "normalized": "(#<#0 <= a && a <= 3 && 0 <= b && b < 4 && 0 <= c && c <= 4#>#)"
    },
    "289:698": {
      "normalized": "(#<#a == 3 && b(c, d, e, f) == 0 && *g == 4 && h(g[1])#>#)"
    },
    "289:729": {
      "normalized": "(#<#a > 0 && a < 3 && b->c < 0#>#)"
    },
    "289:746": {
      "normalized": "(#<#a > 0 && a < 3 && b->c < 0#>#)"
    },
    "301:1581": {
      "normalized": "(!(#<#(a->b & (signed){0}) && a->c && a->d && a->c <= a->e && a->d <= a->f#>#))"
    },
    "301:2431": {
      "normalized": "(#<#a + b - c <= d && e + b - c <= f && *d == *f#>#)"
    },
    "301:2713": {
      "normalized": "(#<#a > b * 3 - c - 4#>#)"
    },
    "301:2722": {
      "normalized": "(#<#a > b - c - 3 - d#>#)"
    },
    "301:2741": {
      "normalized": "(#<#!a->b && (c + d == 0)#>#)"
    },
    "301:2825": {
      "normalized": "(a->b || (#<#!a->c && (d + e == 0)#>#))"
    },
    "301:3523": {
      "normalized": "(#<#!a->b && !c->b && d(a->e) && d(c->e) && !f->g.h#>#)"
    },
    "301:3755": {
      "normalized": "(#<#(a->b == (signed){0}) && !c->d && !c->e && f->g == h->g#>#)"
    },
    "301:4055": {
      "normalized": "(#<#a && b->c > d && b->e == -1#>#)"
    },
    "301:5836": {
      "normalized": "(#<#a(b) != a(c) || d(e) || f(b->g, c->g)#>#)"
    },
    "301:6529": {
      "normalized": "(#<#a & (signed){0} && b->c.d && b->c.e#>#)"
    },
    "301:6783": {
      "normalized": "(a->b == c && d() && (#<#a->e & f || a->g & (signed){0}#>#))"
    },
    "304:149": {
      "normalized": "(#<#a && b == 3 && c && *d == 4#>#)"
    },
    "307:1244": {
      "normalized": "(#<#*a != 3 && (signed){0} != b(c, a)#>#)"
    },
    "307:184": {
      "normalized": "(#<#a * ((signed){0} - b) < c * (signed){0}#>#)"
    },
    "312:1145": {
      "normalized": "(#<#a != b + c && a[0] != 3#>#)"
    },
    "312:1347": {
      "normalized": "(a(b, c, d->e, #<#d->f ? d->f - 1 : 0#>#, g, h, d->i, d->j))"
    },
    "312:181": {
      "normalized": "(#<#a < b && (c == 0 || a < d)#>#)"
    },
    "312:3024": {
      "normalized": "(#<#a && b->c == d->c && (b->c->e || b->c->f || b->c->g)#>#)"
    },
    "312:3181": {
      "normalized": "(#<#a < b && c(b[-1]) && b[-1] != 3#>#)"
    },
    "312:361": {
      "normalized": "(#<#a->b && (a->c & (signed){0}) && d(a->e, f - b, a->b)#>#)"
    },
    "312:496": {
      "normalized": "(#<#a->b && (a->c & (signed){0}) && a->d != -1 && e && e != (signed){1}#>#)"
    },
    "315:44": {
      "normalized": "(#<#a == (signed){0} && b->c && !d(e) && !f(e, 3)#>#)"
    },
    "329:1454": {
      "normalized": "(#<#!*a && b->c != (signed){0}#>#)"
    },
    "329:2099": {
      "normalized": "(#<#!a || (b && c >= (signed){0})#>#)"
    },
    "329:912": {
      "normalized": "(#<#a >= 0 ? a : b >= 0 ? b : 0#>#)"
    },
    "32:579": {
      "normalized": "(#<#!a && b < 0 && c.d#>#)"
    },
    "331:316": {
      "normalized": "(!a->b || (#<#a->b == 1 && c && d(c, a->e->f, &c) && g(c, \"0\")#>#))"
    },
    "331:598": {
      "normalized": "(#<#a(b, &c, &d) || d[0] != 3 || d[1] != 3#>#)"
    },
    "333:1134": {
      "normalized": "(#<#!a(b, \"0\") && c && d(c) < 0#>#)"
    },
    "333:1148": {
      "normalized": "(#<#!a(b, \"0\") && c && d(c) == (signed){0}#>#)"
    },
    "347:1232": {
      "normalized": "(#<#a || *b || b == c || (e*)d != d#>#)"
    },
    "347:1245": {
      "normalized": "(#<#a || *b || b == c || (e*)d != d#>#)"
    },
    "350:286": {
      "normalized": "(#<#!*a || b <= a#>#)"
    },
    "350:513": {
      "normalized": "(#<#*a && b < a && a[-1] == 3#>#)"
    },
    "352:1043": {
      "normalized": "(#<#a->b == (signed){0} && a->c > 0 && a->d < e#>#)"
    },
    "352:1049": {
      "normalized": "(a->b == (signed){0} && a->c[3 * d + 1] == d && #<#a->e[3 * d] < d#>#)"
    },
    "352:561": {
      "normalized": "(#<#a->b > 1 && c > -1 && a->d == -1#>#)"
    },
    "354:1073": {
      "normalized": "(#<#*a < 0 || b.c < *a#>#)"
    },
    "354:1659": {
      "normalized": "(#<#a && (!b || b < c)#>#)"
    },
    "354:985": {
      "normalized": "(a && (#<#*b < 0 || c.d < *b#>#))"
    },
    "367:134": {
      "normalized": "(#<#a != #<#b + 3 - (c || d)#>##>#)"
    },
    "369:306": {
      "normalized": "(#<#a && b && a < c + d && b < c + d && a < b#>#)"
    },
    "370:1317": {
      "normalized": "(#<#!a->b && a->c != NULL && d > e#>#)"
    },
    "372:609": {
      "normalized": "(#<#(*a & b) || c(d)#>#)"
    },
    "373:1455": {
      "normalized": "(#<#0 < a || b(\"0\")#>#)"
    },
    "378:685": {
      "normalized": "((a = b[#<#c = #<#(d += a)[-1]#>##>#]) != 0)"
    },
    "382:580": {
      "normalized": "(#<#!a || *a != 3 || !a[1]#>#)"
    },
    "382:606": {
      "normalized": "(#<#(!a && (b || c)) || a < b#>#)"
    },
    "384:275": {
      "normalized": "(#<#*a && *b && *b < *a#>#)"
    },
    "386:68": {
      "normalized": "(#<#a == (#<#b < c ? c - b : 0#>#)#>#)"
    },
    "38:1116": {
      "normalized": "(#<#(!a && (b || c)) || a < c#>#)"
    },
    "395:111": {
      "normalized": "(#<#a->b > (signed){0} || c->b > (signed){0} || d->b > (signed){0} || e(a->f, a->b) || e(c->f, c->b) || e(d->f, d->b)#>#)"
    },
    "399:778": {
      "normalized": "(#<#(a.b != (signed){0}) && a.c && *a.c#>#)"
    },
    "39:718": {
      "normalized": "(#<#!a && !b && !c && !d && !e && !f && !g && h == 0#>#)"
    },
    "3:1422": {
      "normalized": "(#<#a < 0 && b < 0 && c->d != (signed){0}#>#)"
    },
    "3:1456": {
      "normalized": "(#<#a + 1 > b->c && !b->d#>#)"
    },
    "3:1740": {
      "normalized": "(a(b->c) < 0 || d(b) < 0 || (#<#!e.f->g && h(b, (signed){0}, 0, 1, NULL, NULL, NULL) < 0#>#) || i(&e, j) < 0)"
    },
    "401:133": {
      "normalized": "(#<#!a || (b->c && b->d && (e & (signed){0}))#>#)"
    },
    "403:22": {
      "normalized": "(#<#!a->b || 3 < a->b || c(a->d, \"0\")#>#)"
    },
    "405:291": {
      "normalized": "(#<#0 <= a-- && a < b->c#>#)"
    },
    "408:144": {
      "normalized": "(#<#(a >= ((d*)b->c)) && (a < ((d*)b->e))#>#)"
    },
    "414:2070": {
      "normalized": "(#<#(a < 0) || !b.c#>#)"
    },
    "416:1375": {
      "normalized": "(#<#(a < 0) || !b.c#>#)"
    },
    "416:1453": {
      "normalized": "(a(b, c->d, NULL, e->f == b->g ? c : NULL, #<#e->f == b->g ? NULL : c#>#))"
    },
    "416:2017": {
      "normalized": "(#<#a == b && c == d && *a == *c#>#)"
    },
    "416:2032": {
      "normalized": "(#<#a == b && c != d && c[-1] == 3#>#)"
    },
    "416:3383": {
      "normalized": "(#<#(!a && !b) || (!b && c(d, e, f, g, h)) || (!a && c(d, e, i, g, h))#>#)"
    },
    "416:3398": {
      "normalized": "(#<#(!a && b && !c) || (!a && !b && c)#>#)"
    },
    "416:628": {
      "normalized": "(#<#a && b > c && d(e, a, c) == 0 && e[c] == 3#>#)"
    },
    "416:888": {
      "normalized": "(#<#a < b && c[a] == 3 && d(c, e, a) == 0#>#)"
    },
    "421:788": {
      "normalized": "(#<#!a->b && c->d >> 3#>#)"
    },
    "432:363": {
      "normalized": "(#<#(a < 0) || !b.c#>#)"
    },
    "436:1021": {
      "normalized": "(#<#a & (signed){0} || !b || c(b, &d)#>#)"
    },
    "436:418": {
      "normalized": "(#<#a == 3 * (b - c)#>#)"
    },
    "436:523": {
      "normalized": "(#<#(a % 3) || (a > 3 * b)#>#)"
    },
    "436:591": {
      "normalized": "(#<#a < 3 * b && c & (signed){0}#>#)"
    },
    "436:608": {
      "normalized": "(#<#a >= 3 * b || !(c & (signed){0})#>#)"
    },
    "438:1124": {
      "normalized": "(#<#(a & (signed){0}) && b < 0 && c == (signed){1}#>#)"
    },
    "438:1134": {
      "normalized": "(#<#!a && 0 <= b && c#>#)"
    },
    "438:1599": {
      "normalized": "(#<#a && b(c) && !d && !(e & (signed){0})#>#)"
    },
    "438:2491": {
      "normalized": "(#<#a->b <= c || d != (signed){0} || (e && f(g, e))#>#)"
    },
    "439:1127": {
      "normalized": "(#<#a == 3 && b < c && c[-1] == 4#>#)"
    },
    "439:1476": {
      "normalized": "(a(b, #<#c[3] ? (c + 3) : \"0\"#>#, &d))"
    },
    "439:1944": {
      "normalized": "(#<#a < 3 || b[4] != 5 || b[1] < 6 || 7 < b[1]#>#)"
    },
    "441:151": {
      "normalized": "(#<#a->b->c - 1 <= a->b->d * 3#>#)"
    },
    "44:112": {
      "normalized": "(#<#!a && b && b->c & (signed){0}#>#)"
    },
    "452:809": {
      "normalized": "(#<#a < 0 || b == NULL || !c(b, a)#>#)"
    },
    "461:37": {
      "normalized": "(#<#(a >> 3) || (b->c < a)#>#)"
    },
    "463:1138": {
      "normalized": "(#<#(a != (signed){0}) && b.c != (sizeof(0))#>#)"
    },
    "463:117": {
      "normalized": "(#<#a < 3 + b + b#>#)"
    },
    "463:1638": {
      "normalized": "(#<#(a != (signed){0}) || b.c != d#>#)"
    },
    "463:2099": {
      "normalized": "(#<#(a->b && (c & (signed){0})) || (a->d && (c & (signed){1}))#>#)"
    },
    "463:632": {
      "normalized": "(#<#!a->b && a->c == -1 && d(a)#>#)"
    },
    "463:96": {
      "normalized": "(#<#a < 3 + b + b#>#)"
    },
    "466:659": {
      "normalized": "(#<#a <= 1 || b.c < d#>#)"
    },
    "469:1061": {
      "normalized": "(#<#!a && b && b->c & (signed){0}#>#)"
    },
    "469:115": {
      "normalized": "(#<#!(a & (signed){0}) && b->c && (c->a & (signed){1})#>#)"
    },
    "469:164": {
      "normalized": "(#<#a->b & (signed){0} && !c->a#>#)"
    },
    "469:174": {
      "normalized": "(#<#a->b & (signed){0} && !c->a#>#)"
    },
    "469:192": {
      "normalized": "(#<#a->b & (signed){0} && !c->a#>#)"
    },
    "469:210": {
      "normalized": "(#<#a->b & (signed){0} && !c->a#>#)"
    },
    "469:230": {
      "normalized": "(#<#a->b & (signed){0} && !c->a#>#)"
    },
    "469:739": {
      "normalized": "(#<#a->b & (signed){0} && a->c != a->d#>#)"
    },
    "469:743": {
      "normalized": "(#<#*a != 3 || !a[1]#>#)"
    },
    "469:976": {
      "normalized": "(#<#!a && b && b->c & (signed){0}#>#)"
    },
    "471:58": {
      "normalized": "(#<#a(b, c) || b + c > d || c > e#>#)"
    },
    "474:1416": {
      "normalized": "(#<#!a || b(a) || a == 3#>#)"
    },
    "474:1447": {
      "normalized": "(#<#!a(b, c, 3) && b[3] == 4 && b[5] >= 6 && b[5] <= 7#>#)"
    },
    "478:457": {
      "normalized": "(#<#a & (signed){0} && (b = c(d))#>#)"
    },
    "47:21": {
      "normalized": "(#<#a - (sizeof(0)) != b->c + b->d#>#)"
    },
    "482:109": {
      "normalized": "(#<#(a->b > 1) && (c < 3) && d(\"0\", 0)#>#)"
    },
    "483:1717": {
      "normalized": "(#<#a - b < 3 && *b != 4#>#)"
    },
    "483:1719": {
      "normalized": "(#<#*a != 3 || #<#b + 1 - a != c(a)#>##>#)"
    },
    "483:540": {
      "normalized": "(#<#a < #<#b(c) + d(\"0\") + e + d(\"1\")#>##>#)"
    },
    "483:615": {
      "normalized": "(#<#(a->b == (signed){0}) || (c(a->b)) || !d || !d->e#>#)"
    },
    "48:172": {
      "normalized": "(a(b, &c, #<#d ? e[f(b)] : NULL#>#, NULL) < 0)"
    },
    "48:95": {
      "normalized": "(a(b, &c, #<#d ? e[f(b)] : NULL#>#, NULL) < 0)"
    },
    "49:1140": {
      "normalized": "(#<#!a->b && !c.d && c.e && f->e != c.e#>#)"
    },
    "505:1759": {
      "normalized": "(#<#*a || b < (signed){0} || (signed){1} < b#>#)"
    },
    "505:2977": {
      "normalized": "(#<#a && b && (b % c == 0)#>#)"
    },
    "505:3359": {
      "normalized": "(#<#(!a && !b) || c || (d->e & (signed){0})#>#)"
    },
    "505:3638": {
      "normalized": "(#<#a + b < a + (sizeof(0))#>#)"
    },
    "505:3667": {
      "normalized": "(#<#a + 3 + b < a#>#)"
    },
    "505:595": {
      "normalized": "(#<#a == (signed){0} && b->c && d > 0#>#)"
    },
    "50:542": {
      "normalized": "(#<#a <= 0 || b <= 0 || a > c->d || b > a || (e && b != a)#>#)"
    },
    "510:1087": {
      "normalized": "(#<#!!a != (*b == 3)#>#)"
    },
    "510:1118": {
      "normalized": "(#<#!!a != (*b == 3)#>#)"
    },
    "510:1141": {
      "normalized": "(#<#!!a != (*b == 3)#>#)"
    },
    "510:1296": {
      "normalized": "(#<#!!a != (*b == 3)#>#)"
    },
    "510:1335": {
      "normalized": "(#<#!!a != (*b == 3)#>#)"
    },
    "510:1438": {
      "normalized": "(#<#!!a != (*b == 3)#>#)"
    },
    "510:1833": {
      "normalized": "(#<#a && (b->c & (signed){0}) && !b->d#>#)"
    },
    "517:725": {
      "normalized": "(#<#a == (signed){0} && (*b & (signed){1})#>#)"
    },
    "517:777": {
      "normalized": "(#<#(a->b & (signed){0}) && (a->c->b & (signed){1}) && (a->c->b & (signed){2})#>#)"
    },
    "526:51": {
      "normalized": "(#<#!a && b == c && b[1] == 3#>#)"
    },
    "531:51": {
      "normalized": "(#<#3 + 4 * a + b > c->d - c->e#>#)"
    },
    "55:498": {
      "normalized": "(a(&b, #<#!c ? NULL : \"0\"#>#, &d))"
    },
    "570:852": {
      "normalized": "(#<#a && a->b > 0 && c.d < a->b#>#)"
    },
    "570:857": {
      "normalized": "(#<#a && a->b > 0 && c.d.e.b < a->b#>#)"
    },
    "579:555": {
      "normalized": "(#<#a == (signed){0} && !b->c.d && b->e.f.g > 0#>#)"
    },
    "582:1131": {
      "normalized": "(#<#a != b && b != a - 3 && !c(d, \"0\") && !c(d, \"1\")#>#)"
    },
    "589:200": {
      "normalized": "(#<#a.b < c + 3 || d(a.a, e)#>#)"
    },
    "589:519": {
      "normalized": "(#<#a(b) == 3 && a(c) == 4 && d(e, c) && f(b->g) && f(c->g)#>#)"
    },
    "591:164": {
      "normalized": "(#<#a != &b || c || d#>#)"
    },
    "595:1433": {
      "normalized": "(#<#a->b != -1 && (c->d < a->b)#>#)"
    },
    "595:1444": {
      "normalized": "(#<#a->b != -1 && (c->d > a->b) && !a->e#>#)"
    },
    "595:1447": {
      "normalized": "(#<#a->b != -1 && (c->d < a->b) && !a->e#>#)"
    },
    "595:2185": {
      "normalized": "(#<#!a(b, \"0\") || !a(b, \"1\") || !a(b, \"2\") || !a(b, \"3\") || !a(b, \"4\") || !a(b, \"5\") || !a(b, \"6\") || !a(b, \"7\") || !a(b, \"8\") || c(b, \"9\") || !a(b, \"10\") || !a(b, \"11\") || c(b, \"12\") || c(b, \"13\") || c(b, \"14\") || c(b, \"15\") || c(b, \"16\")#>#)"
    },
    "595:2721": {
      "normalized": "(#<#!a || !(b & (signed){0}) || (b & (signed){1})#>#)"
    },
    "595:2867": {
      "normalized": "(#<#(a->b.c & (signed){0}) || a->b.d || a->b.e.f#>#)"
    },
    "595:3053": {
      "normalized": "(#<#a != b || b + c != d#>#)"
    },
    "595:3192": {
      "normalized": "(#<#(a->b.c & (signed){0}) || !a->d#>#)"
    },
    "595:3414": {
      "normalized": "(#<#a->b != -1 && (c->d < a->b)#>#)"
    },
    "597:1782": {
      "normalized": "(#<#a < b && !c.d && c.e < c.f#>#)"
    },
    "601:1041": {
      "normalized": "(#<#!(a & (signed){0}) && !b->c && !b->d && !b->e#>#)"
    },
    "601:1153": {
      "normalized": "(!a || b(a, \"0\", c, #<#d ? &d->e.f : g()#>#, 0, h.i, j) || k(a, j))"
    },
    "601:1874": {
      "normalized": "(a(b, \"0\") || (#<#(c == (signed){0} || d(e)) && (a(b, \"1\") || a(b, \"2\"))#>#))"
    },
    "601:2296": {
      "normalized": "(a == (signed){0} && (#<#(b->c && d == 0) || d == 1#>#) && e(NULL, \"0\", &f->g.h, NULL, (signed){1}, (signed){2}))"
    },
    "601:2329": {
      "normalized": "(#<#a || b == (signed){0} || (c & (signed){1})#>#)"
    },
    "601:2449": {
      "normalized": "(#<#a == b || *a == 3 || *a == c#>#)"
    },
    "601:4475": {
      "normalized": "(#<#a(b) && c && !d && e(f, g, b)#>#)"
    },
    "601:4891": {
      "normalized": "(#<#a->b->c.d == 1 && a->b->c.e->f == (signed){0} && a->b->g && !a->b->c.e->h#>#)"
    },
    "601:878": {
      "normalized": "(#<#a < 0 || b < 0 || a < 0 || c#>#)"
    },
    "606:1147": {
      "normalized": "(#<#!a(\"0\", 0) && (!b || c(b)) && (!d || c(d)) && (!e || c(e))#>#)"
    },
    "617:136": {
      "normalized": "(#<#a || b < c->d || e.d#>#)"
    },
    "617:178": {
      "normalized": "(#<#a >= **b#>#)"
    },
    "628:427": {
      "normalized": "(#<#a->b && c->d && c->d->e && a->b <= c->d->e->f#>#)"
    },
    "62:280": {
      "normalized": "(a(b->c->c, #<#d ? b->e + 3 : b->e#>#))"
    },
    "631:176": {
      "normalized": "(#<#a <= 0 || b + 1 < a#>#)"
    },
    "631:493": {
      "normalized": "(#<#a <= 3 || a >= 4 || (a == 5 && (b & (signed){0})) || c((signed){1}, a)#>#)"
    },
    "632:162": {
      "normalized": "(a > (#<#b->c ? b->c - 1 : 0#>#))"
    },
    "633:206": {
      "normalized": "(#<#a != (signed){0} && (a != (signed){1} || b < c)#>#)"
    },
    "63:64": {
      "normalized": "(#<#a.b.c || a.d != -1 || a.e != -1 || 3 < a.f#>#)"
    },
    "645:1919": {
      "normalized": "(#<#(a & (signed){0}) && ((a & (signed){1}) || b)#>#)"
    },
    "645:2226": {
      "normalized": "(a <= b || #<#(c = d + a - b)[-1]#># != 3 || e(c, f))"
    },
    "66:52": {
      "normalized": "(#<#!a(b) && !a(c) && d(b, c) && (e == f)#>#)"
    },
    "689:228": {
      "normalized": "(#<#a < b && a > -b#>#)"
    },
    "69:1084": {
      "normalized": "(#<#!a || b == c + 1 || *b != 3 || d(b + 1, &e)#>#)"
    },
    "70:1093": {
      "normalized": "((#<#a && (b + (signed){0} + c) > a#>#) || #<#(b + (signed){0} + c) < b#>#)"
    },
    "70:1418": {
      "normalized": "(#<#!*a && !b(c) && d#>#)"
    },
    "70:1926": {
      "normalized": "(#<#a || b == c || *b != 3#>#)"
    },
    "70:1938": {
      "normalized": "(#<#a || b == c + 1 || *b || (d && (3 < e))#>#)"
    },
    "70:3287": {
      "normalized": "(#<#a(b, 3) || c == b || *c#>#)"
    },
    "70:542": {
      "normalized": "(#<#(a >> b->c) >= 3#>#)"
    },
    "70:566": {
      "normalized": "(#<#(a >> b->c) < 3#>#)"
    },
    "70:971": {
      "normalized": "(#<#a && a->b.c && a->b.d && a->e < f && g->c > h->i#>#)"
    },
    "70:996": {
      "normalized": "((a && (b + (signed){0} + c.d) > a) || #<#(b + (signed){0} + c.d) < b#>#)"
    },
    "720:10": {
      "normalized": "(#<#a & *b && c->d.e#>#)"
    },
    "72:2299": {
      "normalized": "(#<#a > 0 || (a < 0 && b->c.a)#>#)"
    },
    "731:22": {
      "normalized": "(#<#a->b < 3 || 4 < a->b || c(a->d, 5) || c(a->d, 6) || c(a->d, 7)#>#)"
    },
    "732:166": {
      "normalized": "(#<#!a || (sizeof(0)) <= (a - b)#>#)"
    },
    "732:95": {
      "normalized": "(#<#a && a->b == (signed){0} && ((c*)a)->d#>#)"
    },
    "735:156": {
      "normalized": "(#<#(signed){0} && a->b < 0 && c == (signed){1}#>#)"
    },
    "765:903": {
      "normalized": "(#<#a & (signed){0} || !b->c.d || b->e#>#)"
    },
    "767:101": {
      "normalized": "(#<#a && b & (signed){0} && c(a, \"0\")#>#)"
    },
    "767:1101": {
      "normalized": "(#<#!a(b) || c(b, \"0\") || c(b, \"1\") || c(b, \"2\") || c(b, \"3\") || c(b, \"4\")#>#)"
    },
    "770:1270": {
      "normalized": "(#<#a(b->c) && d >= e && f == e#>#)"
    },
    "770:1275": {
      "normalized": "(#<#(a == b && c >= b) || (a == d && c == b)#>#)"
    },
    "770:297": {
      "normalized": "(#<#a < b && !c(d, e, a) && e[a] < 3#>#)"
    },
    "779:1225": {
      "normalized": "(#<#a < b && !c(d, e, a) && d[a] < 3#>#)"
    },
    "779:1456": {
      "normalized": "(#<#a->b && c == 1 && d == 1 && e(f->g)#>#)"
    },
    "779:2142": {
      "normalized": "(#<#!a->b && (c->d & (signed){0}) && (c->d & (signed){1})#>#)"
    },
    "779:2708": {
      "normalized": "(#<#(a && b) || (a && c && d) || (b && e && f)#>#)"
    },
    "779:580": {
      "normalized": "(#<#(a++) + b < c->d#># && !e(f, c->g[a + b]->h))"
    },
    "781:1150": {
      "normalized": "(#<#a->b == 0 && !a->c && a->d.e == 0#>#)"
    },
    "781:531": {
      "normalized": "(#<#a->b == (signed){0} && c && !d && e(a)#>#)"
    },
    "781:952": {
      "normalized": "(#<#!a || *a || *b <= 0#>#)"
    },
    "781:966": {
      "normalized": "(#<#!a || *a || !b || *b == -1#>#)"
    },
    "785:228": {
      "normalized": "(#<#!a && b < c && b + 1 != c#>#)"
    },
    "785:465": {
      "normalized": "(#<#(a(b) == c) || (b[c] == 3)#>#)"
    },
    "785:54": {
      "normalized": "(#<#(b*)a <= 3 || (b*)a >= 4 || c((signed){0}, a) || (d && c(d, a)) || (e && c(f, a))#>#)"
    },
    "787:24": {
      "normalized": "(#<#a != b - 1 && *a#>#)"
    },
    "78:392": {
      "normalized": "(#<#!a || b < a / 3#>#)"
    },
    "799:190": {
      "normalized": "(#<#a == 3 && b && c[1] && c[1] != 4#>#)"
    },
    "799:264": {
      "normalized": "(#<#a == b || ((c & (signed){0}) && d == 3)#>#)"
    },
    "79:39": {
      "normalized": "(#<#a == (signed){0} || b == c || d < 0#>#)"
    },
    "805:204": {
      "normalized": "(#<#(a & (signed){0}) && b - c >= d(a)#>#)"
    },
    "805:312": {
      "normalized": "(#<#(a & (signed){0}) && 0 <= b#>#)"
    },
    "805:317": {
      "normalized": "(#<#(a & (signed){0}) && b(a) <= c - d#>#)"
    },
    "809:950": {
      "normalized": "(#<#a[b - 1] || c[d - 1]#>#)"
    },
    "811:144": {
      "normalized": "(#<#a != b && 0 <= a && a < c->d.e#>#)"
    },
    "813:191": {
      "normalized": "(#<#a < b(1) && c < b(3) && d(e, 1, a + 1, 3, c + 1)#>#)"
    },
    "816:578": {
      "normalized": "(#<#a == (signed){0} || b->c != d->c || b->e != d->e || b->f != d->f || g(h, b->i, j, d->i, b->f, k->l)#>#)"
    },
    "821:168": {
      "normalized": "(#<#a && b == c + 1 && d[c] == 3#>#)"
    },
    "821:268": {
      "normalized": "(#<#a + 1 < b && c(a[1]) && a[1] != 3#>#)"
    },
    "84:1788": {
      "normalized": "(#<#!a[3] || *b || c < 0#>#)"
    },
    "84:1810": {
      "normalized": "(#<#a || (b + 1) >= c#>#)"
    },
    "84:1818": {
      "normalized": "(#<#a || (b + 1) >= c#>#)"
    },
    "84:1828": {
      "normalized": "(#<#*a || b.c & 3#>#)"
    },
    "84:541": {
      "normalized": "(#<#*a <= 0 || *a >= b->c.d#>#)"
    },
    "84:774": {
      "normalized": "(#<#a->b <= c || a->d != (signed){0}#>#)"
    },
    "84:830": {
      "normalized": "(#<#a != b || c != d || e(f, g, a) != 0#>#)"
    },
    "85:282": {
      "normalized": "(#<#a && !b && (c.d & (signed){0})#>#)"
    },
    "85:372": {
      "normalized": "(#<#a->b >= 0 && c != (signed){0} && c != a->d#>#)"
    },
    "87:1314": {
      "normalized": "(#<#(a = *b) && (c(a) || (a == 3))#>#)"
    },
    "87:2142": {
      "normalized": "(#<#!a && b && (c > 1 || d)#>#)"
    },
    "87:224": {
      "normalized": "(#<#(a->b.c & (signed){0}) || a->b.d || a->b.e.f#>#)"
    },
    "88:335": {
      "normalized": "(#<#(a || b) && (!c || d(e))#>#)"
    },
    "88:712": {
      "normalized": "(#<#a || b || c || (d.e & (signed){0}) || f#>#)"
    },
    "88:728": {
      "normalized": "(#<#a && (b || c || d || e || f || g || h)#>#)"
    },
    "99:622": {
      "normalized": "(#<#a && b(c, \"0\", &d) && b(d, a, &d) && !e(d, \"1\")#>#)"
    }
  },
  "known_bad": {},
  "known_good": {},
  "nested_if_instances": {},
  "nested_if_patterns": [],
  "patterns": [
    "(!(#<#(a->b & 12345) && a->c && a->d && a->c <= a->e && a->d <= a->f#>#))",
    "(!(#<#a == 12345 || a == 12345 || a == 12345 || (12345 <= a && a <= 12345) || (12345 <= a && a <= 12345) || (12345 <= a && a <= 12345)#>#))",
    "(!a || b() || c())",
    "(!a->b || (#<#a->b == 12345 && c && d() && e()#>#))",
    "(#<#!!a != (*b == 12345)#>#)",
    "(#<#!(a & 12345) && !b->c && !b->d && !b->e#>#)",
    "(#<#!(a & 12345) && ((a & b) == b)#>#)",
    "(#<#!(a & 12345) && b() < 12345#>#)",
    "(#<#!(a & 12345) && b->c && (c->a & 12345)#>#)",
    "(#<#!*a && !b() && c#>#)",
    "(#<#!*a && b->c != 12345#>#)",
    "(#<#!*a || b <= a#>#)",
    "(#<#!a && !b && !c && !d && !e && !f && !g && h == 12345#>#)",
    "(#<#!a && *b != 12345 && *b != 12345 && *b != 12345 && *b != 12345 && *b != 12345 && *b != 12345 && *b != 12345#>#)",
    "(#<#!a && 12345 <= b && c#>#)",
    "(#<#!a && b && (c > 12345 || d)#>#)",
    "(#<#!a && b && b->c & 12345#>#)",
    "(#<#!a && b < 12345 && c.d#>#)",
    "(#<#!a && b < c && b + 12345 != c#>#)",
    "(#<#!a && b == c && b[12345] == 12345#>#)",
    "(#<#!a && b->c == 12345 && d()#>#)",
    "(#<#!a && b->c > 12345 && d()#>#)",
    "(#<#!a || !(b & 12345) || (b & 12345)#>#)",
    "(#<#!a || !b || a - c != b - d || e()#>#)",
    "(#<#!a || (!b && c) || d()#>#)",
    "(#<#!a || (a->b.c & 12345) || d()#>#)",
    "(#<#!a || (b && c >= 12345)#>#)",
    "(#<#!a || (b->c && b->d && (e & 12345))#>#)",
    "(#<#!a || *a != 12345 || !a[12345]#>#)",
    "(#<#!a || *a || !b || *b == 12345#>#)",
    "(#<#!a || *a || *b <= 12345#>#)",
    "(#<#!a || 12345 <= (a - b)#>#)",
    "(#<#!a || a - b < c + 12345#>#)",
    "(#<#!a || a[12345] != 12345 || b < a - c#>#)",
    "(#<#!a || b < a / 12345#>#)",
    "(#<#!a || b == c + 12345 || *b != 12345 || d()#>#)",
    "(#<#!a || b() || *c != 12345#>#)",
    "(#<#!a || b() || a == 12345#>#)",
    "(#<#!a() && !a() && b() && (c == d)#>#)",
    "(#<#!a() && (!b || c()) && (!d || c()) && (!e || c())#>#)",
    "(#<#!a() && b && c() < 12345#>#)",
    "(#<#!a() && b && c() == 12345#>#)",
    "(#<#!a() && b[12345] == 12345 && b[12345] >= 12345 && b[12345] <= 12345#>#)",
    "(#<#!a() || !a() || !a() || !a() || !a() || !a() || !a() || !a() || !a() || b() || !a() || !a() || b() || b() || b() || b() || b()#>#)",
    "(#<#!a() || b() || b() || b() || b() || b()#>#)",
    "(#<#!a->b && !c && d && e->f > g#>#)",
    "(#<#!a->b && !c->b && d() && d() && !e->f.g#>#)",
    "(#<#!a->b && !c.d && c.e && f->e != c.e#>#)",
    "(#<#!a->b && (c + d == 12345)#>#)",
    "(#<#!a->b && (c->d & 12345) && (c->d & 12345)#>#)",
    "(#<#!a->b && a->c != NULL && d > e#>#)",
    "(#<#!a->b && a->c == 12345 && d()#>#)",
    "(#<#!a->b && a->c == NULL && !a->d#>#)",
    "(#<#!a->b && c->d >> 12345#>#)",
    "(#<#!a->b || 12345 < a->b || c()#>#)",
    "(#<#!a[12345] || *b || c < 12345#>#)",
    "(#<#(!a && !b) || (!b && c()) || (!a && c())#>#)",
    "(#<#(!a && !b) || c || (d->e & 12345)#>#)",
    "(#<#(!a && (b || c)) || a < b#>#)",
    "(#<#(!a && (b || c)) || a < c#>#)",
    "(#<#(!a && b && !c) || (!a && !b && c)#>#)",
    "(#<#(!a && b) || (a && b > 12345)#>#)",
    "(#<#(!a || b) && c() == 12345#>#)",
    "(#<#(*a & 12345) && b->c == 12345#>#)",
    "(#<#(*a & b) || c()#>#)",
    "(#<#(a != 12345) && (b + 12345 < a)#>#)",
    "(#<#(a != 12345) && b.c != 12345#>#)",
    "(#<#(a != 12345) || b.c != d#>#)",
    "(#<#(a % 12345) || (a > 12345 * b)#>#)",
    "(#<#(a & 12345) && !b->c && b->d#>#)",
    "(#<#(a & 12345) && ((a & 12345) || b)#>#)",
    "(#<#(a & 12345) && 12345 <= b#>#)",
    "(#<#(a & 12345) && b - c >= d()#>#)",
    "(#<#(a & 12345) && b < 12345 && c == 12345#>#)",
    "(#<#(a & 12345) && b() <= c - d#>#)",
    "(#<#(a && b) || (a && c && d) || (b && e && f)#>#)",
    "(#<#(a < 12345) || !b.c#>#)",
    "(#<#(a < 12345) || (a - 12345) % 12345#>#)",
    "(#<#(a = *b) && (c() || (a == 12345))#>#)",
    "(#<#(a = b()) && (c() || d())#>#)",
    "(#<#(a == b && c >= b) || (a == d && c == b)#>#)",
    "(#<#(a >= (b->c)) && (a < (b->d))#>#)",
    "(#<#(a >> 12345) + (b >> 12345) > (c >> 12345)#>#)",
    "(#<#(a >> 12345) || (b->c < a)#>#)",
    "(#<#(a >> b->c) < 12345#>#)",
    "(#<#(a >> b->c) >= 12345#>#)",
    "(#<#(a || b) && (!c || d())#>#)",
    "(#<#(a() == b) || (c[b] == 12345)#>#)",
    "(#<#(a++) + b < c->d#># && !e())",
    "(#<#(a->b & 12345) && (a->c->b & 12345) && (a->c->b & 12345)#>#)",
    "(#<#(a->b & 12345) && c && c->d == 12345#>#)",
    "(#<#(a->b & 12345) && c->d > 12345#>#)",
    "(#<#(a->b && (c & 12345)) || (a->d && (c & 12345))#>#)",
    "(#<#(a->b == 12345) && !c->d && !c->e && f->g == h->g#>#)",
    "(#<#(a->b == 12345) || (c()) || !d || !d->e#>#)",
    "(#<#(a->b > 12345) && (c < 12345) && d()#>#)",
    "(#<#(a->b) & (12345 << c)#>#)",
    "(#<#(a->b) && ((c + 12345) % (a->b))#>#)",
    "(#<#(a->b.c & 12345) || !a->d#>#)",
    "(#<#(a->b.c & 12345) || a->b.d || a->b.e.f#>#)",
    "(#<#(a.b != 12345) && a.c && *a.c#>#)",
    "(#<#(a.b & 12345) || (c != 12345) || (d.e > 12345) || a.f#>#)",
    "(#<#(a.b || c == 12345) && (d == 12345 || d == 12345)#>#)",
    "(#<#*a != 12345 && 12345 != b()#>#)",
    "(#<#*a != 12345 || !a[12345]#>#)",
    "(#<#*a != 12345 || #<#b + 12345 - a != c()#>##>#)",
    "(#<#*a && *b && *b < *a#>#)",
    "(#<#*a && b < a && a[12345] == 12345#>#)",
    "(#<#*a && b() && b() && b() && b()#>#)",
    "(#<#*a < 12345 || b.c < *a#>#)",
    "(#<#*a <= 12345 || *a >= b->c.d#>#)",
    "(#<#*a <= 12345 || 12345 < *a#>#)",
    "(#<#*a || (b == 12345 && c() && d)#>#)",
    "(#<#*a || (b->c == 12345)#>#)",
    "(#<#*a || b < 12345 || 12345 < b#>#)",
    "(#<#*a || b->c <= 12345#>#)",
    "(#<#*a || b.c & 12345#>#)",
    "(#<#12345 && a->b < 12345 && c == 12345#>#)",
    "(#<#12345 + 12345 * a + b > c->d - c->e#>#)",
    "(#<#12345 < a || #<#12345 - b < (a *= 12345)#>##>#)",
    "(#<#12345 < a || b()#>#)",
    "(#<#12345 <= a && a <= 12345 && 12345 <= b && b < 12345 && 12345 <= c && c <= 12345#>#)",
    "(#<#12345 <= a-- && a < b->c#>#)",
    "(#<#a != !b || c#>#)",
    "(#<#a != #<#b + 12345 - (c || d)#>##>#)",
    "(#<#a != &b || c || d#>#)",
    "(#<#a != 12345 && (a != 12345 || b < c)#>#)",
    "(#<#a != 12345 && (a != 12345 || b())#>#)",
    "(#<#a != 12345 && a + b != 12345#>#)",
    "(#<#a != 12345 || !b->c || b->d != e#>#)",
    "(#<#a != NULL && a->b > 12345 && c != NULL && c->b > 12345#>#)",
    "(#<#a != b && 12345 <= a && a < c->d.e#>#)",
    "(#<#a != b && b != a - 12345 && !c() && !c()#>#)",
    "(#<#a != b + 12345 && *a == 12345 && 12345 <= c && c < 12345#>#)",
    "(#<#a != b + c && a[12345] != 12345#>#)",
    "(#<#a != b - 12345 && *a#>#)",
    "(#<#a != b || b + c != d#>#)",
    "(#<#a != b || c != d || e() != 12345#>#)",
    "(#<#a != b->a || a <= 12345#>#)",
    "(#<#a & *b && c->d.e#>#)",
    "(#<#a & 12345 && (b = c())#>#)",
    "(#<#a & 12345 && b->c.d && b->c.e#>#)",
    "(#<#a & 12345 || !b || c()#>#)",
    "(#<#a & 12345 || !b->c.d || b->e#>#)",
    "(#<#a && !(a & 12345) && b.c#>#)",
    "(#<#a && !b && (c.d & 12345)#>#)",
    "(#<#a && (!b || b < c)#>#)",
    "(#<#a && (#<#(12345 < b) || c || d#>#)#>#)",
    "(#<#a && (#<#b != c || c > 12345#>#)#>#)",
    "(#<#a && (b <= 12345 || c)#>#)",
    "(#<#a && (b || c || d || e || f || g || h)#>#)",
    "(#<#a && (b->c & 12345) && !b->d#>#)",
    "(#<#a && a != 12345 && a != 12345 && !b()#>#)",
    "(#<#a && a->b == 12345 && (a)->c#>#)",
    "(#<#a && a->b > 12345 && c.d < a->b#>#)",
    "(#<#a && a->b > 12345 && c.d.e.b < a->b#>#)",
    "(#<#a && a->b.c && a->b.d && a->e < f && g->c > h->i#>#)",
    "(#<#a && b & 12345 && c()#>#)",
    "(#<#a && b && (!c || d())#>#)",
    "(#<#a && b && (b % c == 12345)#>#)",
    "(#<#a && b && a < c + d && b < c + d && a < b#>#)",
    "(#<#a && b + c + d + c >= a#>#)",
    "(#<#a && b - c != d()#>#)",
    "(#<#a && b <= a--#>#)",
    "(#<#a && b == 12345 && c && *d == 12345#>#)",
    "(#<#a && b == c + 12345 && d[c] == 12345#>#)",
    "(#<#a && b > a && c > 12345#>#)",
    "(#<#a && b > c && d() == 12345 && e[c] == 12345#>#)",
    "(#<#a && b() && !c && !(d & 12345)#>#)",
    "(#<#a && b() && b() && !c()#>#)",
    "(#<#a && b() && b() == b() && !c->d && e->f != 12345 && e->f != 12345#>#)",
    "(#<#a && b->c == d->c && (b->c->e || b->c->f || b->c->g)#>#)",
    "(#<#a && b->c > d && b->e == 12345#>#)",
    "(#<#a * (12345 - b) < c * 12345#>#)",
    "(#<#a + 12345 + b < a#>#)",
    "(#<#a + 12345 < b && c() && a[12345] != 12345#>#)",
    "(#<#a + 12345 > b->c && !b->d#>#)",
    "(#<#a + b + !!c#># > 12345)",
    "(#<#a + b - c != d.e || f()#>#)",
    "(#<#a + b - c <= d && d < 12345#>#)",
    "(#<#a + b - c <= d && e + b - c <= f && *d == *f#>#)",
    "(#<#a + b < a + 12345#>#)",
    "(#<#a + b < c && !d()#>#)",
    "(#<#a - 12345 != b->c + b->d#>#)",
    "(#<#a - b < 12345 && *b != 12345#>#)",
    "(#<#a - b > c && !d() && b[c] == 12345#>#)",
    "(#<#a - b >= c() && d() && d()#>#)",
    "(#<#a < #<#b() + c() + d + c()#>##>#)",
    "(#<#a < 12345 && (12345 & b[a])#>#)",
    "(#<#a < 12345 && b < 12345 && c->d != 12345#>#)",
    "(#<#a < 12345 * b && c & 12345#>#)",
    "(#<#a < 12345 * b && c + 12345 < d#>#)",
    "(#<#a < 12345 + b + b#>#)",
    "(#<#a < 12345 || (b + 12345) % 12345#>#)",
    "(#<#a < 12345 || a > 12345 || ((b || c) && a != 12345)#>#)",
    "(#<#a < 12345 || b < 12345 || a < 12345 || c#>#)",
    "(#<#a < 12345 || b == NULL || !c()#>#)",
    "(#<#a < 12345 || b[12345] != 12345 || b[12345] < 12345 || 12345 < b[12345]#>#)",
    "(#<#a < b && !c() && d[a] < 12345#>#)",
    "(#<#a < b && !c.d && c.e < c.f#>#)",
    "(#<#a < b && (c == 12345 || a < d)#>#)",
    "(#<#a < b && a > -b#>#)",
    "(#<#a < b && c() && b[12345] != 12345#>#)",
    "(#<#a < b && c[a] == 12345 && d() == 12345#>#)",
    "(#<#a < b - c && !d() && e()#>#)",
    "(#<#a < b || b <= a - 12345#>#)",
    "(#<#a < b() && c < b() && d()#>#)",
    "(#<#a < b() && c[a] == 12345 && d() == 12345#>#)",
    "(#<#a <= 12345 || a >= 12345 || (a == 12345 && (b & 12345)) || c()#>#)",
    "(#<#a <= 12345 || a >= 12345 || b() || (c && b()) || (d && b())#>#)",
    "(#<#a <= 12345 || b + 12345 < a#>#)",
    "(#<#a <= 12345 || b <= 12345 || a > c->d || b > a || (e && b != a)#>#)",
    "(#<#a <= 12345 || b.c < d#>#)",
    "(#<#a <= b && c + d == 12345#>#)",
    "(#<#a <= b + c + 12345 || d() || b[c] != 12345#>#)",
    "(#<#a == (#<#b < c ? c - b : 12345#>#)#>#)",
    "(#<#a == 12345 && !b->c.d && b->e.f.g > 12345#>#)",
    "(#<#a == 12345 && (*b & 12345)#>#)",
    "(#<#a == 12345 && b && c[12345] && c[12345] != 12345#>#)",
    "(#<#a == 12345 && b < c && c[12345] == 12345#>#)",
    "(#<#a == 12345 && b() == 12345 && *c == 12345 && d()#>#)",
    "(#<#a == 12345 && b->c && !d() && !e()#>#)",
    "(#<#a == 12345 && b->c && d > 12345#>#)",
    "(#<#a == 12345 * (b - c)#>#)",
    "(#<#a == 12345 || b == c || d < 12345#>#)",
    "(#<#a == 12345 || b->c != d->c || b->e != d->e || b->f != d->f || g()#>#)",
    "(#<#a == b && c != d && c[12345] == 12345#>#)",
    "(#<#a == b && c == d && *a == *c#>#)",
    "(#<#a == b || !b || *b != 12345#>#)",
    "(#<#a == b || ((c & 12345) && d == 12345)#>#)",
    "(#<#a == b || *a == 12345 || *a == c#>#)",
    "(#<#a == b.b || *a != 12345 || c || d != d#>#)",
    "(#<#a > 12345 && a < 12345 && b->c < 12345#>#)",
    "(#<#a > 12345 && b->c != NULL && !b->d#>#)",
    "(#<#a > 12345 || (a < 12345 && b->c.a)#>#)",
    "(#<#a > b * 12345 - c - 12345#>#)",
    "(#<#a > b - c - 12345 - d#>#)",
    "(#<#a >= **b#>#)",
    "(#<#a >= 12345 * b || !(c & 12345)#>#)",
    "(#<#a >= 12345 ? a : b >= 12345 ? b : 12345#>#)",
    "(#<#a || (b + 12345) >= c#>#)",
    "(#<#a || *b || b == c || d != d#>#)",
    "(#<#a || b < c->d || e.d#>#)",
    "(#<#a || b == 12345 || (c & 12345)#>#)",
    "(#<#a || b == c + 12345 || *b || (d && (12345 < e))#>#)",
    "(#<#a || b == c || *b != 12345 || d != d#>#)",
    "(#<#a || b == c || *b != 12345#>#)",
    "(#<#a || b || c || (d.e & 12345) || f#>#)",
    "(#<#a() != 12345 && (b->c || b->d)#>#)",
    "(#<#a() != a() || b() || c()#>#)",
    "(#<#a() && b && !c && d()#>#)",
    "(#<#a() && b >= c && d == c#>#)",
    "(#<#a() && b->c != 12345 && d > 12345#>#)",
    "(#<#a() < 12345 || b->c < 12345#>#)",
    "(#<#a() == 12345 && a() == 12345 && b() && c() && c()#>#)",
    "(#<#a() || b * c > d#>#)",
    "(#<#a() || b + c > d || c > e#>#)",
    "(#<#a() || b == c || *b#>#)",
    "(#<#a() || b[12345] != 12345 || b[12345] != 12345#>#)",
    "(#<#a()->b.c == d - 12345#>#)",
    "(#<#a++, b++->c#>#)",
    "(#<#a-- < 12345 || b-- < 12345#>#)",
    "(#<#a->b != 12345 && (c->d < a->b) && !a->e#>#)",
    "(#<#a->b != 12345 && (c->d < a->b)#>#)",
    "(#<#a->b != 12345 && (c->d > a->b) && !a->e#>#)",
    "(#<#a->b & 12345 && !c->a#>#)",
    "(#<#a->b & 12345 && a->c != a->d#>#)",
    "(#<#a->b && !(c & 12345) && d->e == NULL#>#)",
    "(#<#a->b && (a->c & 12345) && a->d != 12345 && e && e != 12345#>#)",
    "(#<#a->b && (a->c & 12345) && d()#>#)",
    "(#<#a->b && c == 12345 && d == 12345 && e()#>#)",
    "(#<#a->b && c->d && c->d->e && a->b <= c->d->e->f#>#)",
    "(#<#a->b < 12345 || 12345 < a->b || c() || c() || c()#>#)",
    "(#<#a->b <= c || a->d != 12345#>#)",
    "(#<#a->b <= c || d != 12345 || (e && f())#>#)",
    "(#<#a->b == 12345 && !a->c && a->d.e == 12345#>#)",
    "(#<#a->b == 12345 && a->c > 12345 && a->d < e#>#)",
    "(#<#a->b == 12345 && c && !d && e()#>#)",
    "(#<#a->b > 12345 && (c->d || c->e || c->f || c->g)#>#)",
    "(#<#a->b > 12345 && c > 12345 && a->d == 12345#>#)",
    "(#<#a->b > 12345 || c->b > 12345 || d->b > 12345 || e() || e() || e()#>#)",
    "(#<#a->b >= 12345 && (a->c || a->d || a->e)#>#)",
    "(#<#a->b >= 12345 && c != 12345 && c != a->d#>#)",
    "(#<#a->b->c - 12345 <= a->b->d * 12345#>#)",
    "(#<#a->b->c.d == 12345 && a->b->c.e->f == 12345 && a->b->g && !a->b->c.e->h#>#)",
    "(#<#a.b && (a.c || a.d || a.e) && (a.f || a.g)#>#)",
    "(#<#a.b && c && !(d & 12345)#>#)",
    "(#<#a.b < c + 12345 || d()#>#)",
    "(#<#a.b || a.c || a.d || a.e || a.f.g || a.h != 12345#>#)",
    "(#<#a.b.c != 12345 && a.b.c != a.b.d && a.b.c != a.b.e#>#)",
    "(#<#a.b.c || a.d != 12345 || a.e != 12345 || 12345 < a.f#>#)",
    "(#<#a[12345] != 12345 || b - a <= 12345#>#)",
    "(#<#a[b - 12345] || c[d - 12345]#>#)",
    "(#<#a[b++] != a[c - 12345]#>#)",
    "((#<#!a->b && a->c > 12345 && d->e#>#) || d->f)",
    "((#<#(a <= 12345 && b <= 12345) || b == 12345#>#) && (c != 12345 && c < 12345))",
    "((#<#a && (b + 12345 + c) > a#>#) || #<#(b + 12345 + c) < b#>#)",
    "((#<#a.b > 12345 && (c || d.e)#>#) || (c && d.e))",
    "(((a < 12345) && (!b || !b->c)) || (#<#(12345 <= a) && (!b && d[a])#>#))",
    "((a && (b + 12345 + c.d) > a) || #<#(b + 12345 + c.d) < b#>#)",
    "((a = b[#<#c = #<#(d += a)[12345]#>##>#]) != 12345)",
    "(a && (#<#(12345 < b->c) || b->d || b->e#>#))",
    "(a && (#<#*b < 12345 || c.d < *b#>#))",
    "(a && (#<#a->b <= c * b || (d && b > d)#>#))",
    "(a <= b && #<#c[#<#(d & 12345) + 12345 + a#>#]#># == #<#c[#<#(e & 12345) + 12345 + a#>#]#>#)",
    "(a <= b && (#<#c[d + 12345 + a] == c[e + 12345 + a]#>#))",
    "(a <= b || #<#(c = d + a - b)[12345]#># != 12345 || e())",
    "(a == 12345 && (#<#(b->c && d == 12345) || d == 12345#>#) && e())",
    "(a > (#<#b->c ? b->c - 12345 : 12345#>#))",
    "(a() < 12345 || b() < 12345 || (#<#!c.d->e && f() < 12345#>#) || g() < 12345)",
    "(a() < 12345)",
    "(a() || (#<#(b == 12345 || c()) && (a() || a())#>#))",
    "(a())",
    "(a->b == 12345 && a->c[12345 * d + 12345] == d && #<#a->e[12345 * d] < d#>#)",
    "(a->b == c && d() && (#<#a->e & f || a->g & 12345#>#))",
    "(a->b || (#<#!a->c && (d + e == 12345)#>#))"
  ]
}